name: C/C++ CI

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

          # Perform your build steps here
          # Example build steps for each platform:

          # Build on Ubuntu
          - name: Build on Ubuntu
            if: matrix.os == 'ubuntu-latest'
            run: |
              g++ -std=c++11 -o loader_example loader_example.cc
              ./loader_example models/Cube/Cube.gltf

          # Build on Windows
          - name: Build on Windows
            if: matrix.os == 'windows-latest'
            run: |
              mkdir build
              cd build
              cmake -G "Visual Studio 17 2022" -A x64 -DTINYGLTF_BUILD_LOADER_EXAMPLE=On -DTINYGLTF_BUILD_GL_EXAMPLES=Off -DTINYGLTF_BUILD_VALIDATOR_EXAMPLE=On ..
              cmake --build . --config Release
              cd ..

          # Build on macOS
          - name: Build on macOS
            if: matrix.os == 'macos-latest'
            run: |
              clang++ -std=c++11 -g -O0 -o loader_example loader_example.cc
              ./loader_example models/Cube/Cube.gltf

      - name: Package Artifacts
        run: |
          # Perform packaging steps here
          # For example, create a ZIP file with the build artifacts
          zip -r artifacts.zip loader_example models/

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build-artifact
          path: |
            artifacts.zip
